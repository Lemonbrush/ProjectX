[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;
render_mode unshaded;

uniform vec4 outline_color : hint_color;
uniform int outline_cutoff;

void fragment() {
	int thresholdHeight = textureSize(TEXTURE, 0).y - outline_cutoff;
	int currentHeight = int(UV.y * float(textureSize(TEXTURE, 0).y));
	
	if (currentHeight > thresholdHeight) {
		COLOR = texture(TEXTURE, UV);
	} else {
		vec4 sprite_color = texture(TEXTURE, UV);
		float alpha = -4.0 * sprite_color.a;
		alpha += texture(TEXTURE, UV + vec2(TEXTURE_PIXEL_SIZE.x, 0)).a;
		alpha += texture(TEXTURE, UV + vec2(-TEXTURE_PIXEL_SIZE.x, 0)).a;
		alpha += texture(TEXTURE, UV + vec2(0, TEXTURE_PIXEL_SIZE.y)).a;
		alpha += texture(TEXTURE, UV + vec2(0, -TEXTURE_PIXEL_SIZE.y)).a;
		vec4 final_color = mix(sprite_color, outline_color, clamp(alpha, 0.0, 1.0));
		COLOR = vec4(final_color.rgb, clamp(abs(alpha) + sprite_color.a, 0.0, 1.0)) ;
	}
}"
